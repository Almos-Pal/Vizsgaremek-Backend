generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// USER TABLE
model User {
  user_id          Int                @id @default(autoincrement())
  username         String
  email            String             @unique
  password         String
  gyakorlatok      User_Gyakorlat[]   // Connection to exercises with personal data
  edzesek          Edzes[]
  isAdmin         Boolean           @default(false)    
  suly Int?
  magassag Int?

  @@map("user")
}

// GYAKORLAT TABLE (Base exercise definitions)
model Gyakorlat {
  gyakorlat_id     Int                       @id @default(autoincrement())
  gyakorlat_neve   String
  eszkoz           String?
  gyakorlat_leiras String?
  fo_izomcsoport   Int?
  user_id          Int?                      // Optional: creator of the exercise
  users            User_Gyakorlat[]          // Users who have used this exercise
  edzesek          Edzes_Gyakorlat[]        // Exercise instances in workouts
  izomcsoportok    Gyakorlat_Izomcsoport[]  // Exercise muscle groups

  @@map("gyakorlat")
}

// USER_GYAKORLAT JUNCTION TABLE (User's exercise data)
model User_Gyakorlat {
  user_id         Int
  gyakorlat_id    Int
  personal_best   Float?                    // User's personal best weight
  last_weight     Float?                    // Last used weight
  last_reps       Int?                      // Last used reps
  total_sets      Int      @default(0)      // Total sets performed
  history         User_Gyakorlat_History[]  // History of sets
  user            User     @relation(fields: [user_id], references: [user_id])
  gyakorlat       Gyakorlat @relation(fields: [gyakorlat_id], references: [gyakorlat_id])

  @@id([user_id, gyakorlat_id])
}

// USER_GYAKORLAT_HISTORY (Track each set performed)
model User_Gyakorlat_History {
  id              Int           @id @default(autoincrement())
  user_id         Int
  gyakorlat_id    Int
  weight          Float
  reps            Int
  date            DateTime      @default(now())
  edzes_id        Int        // Add this field to track which workout this history belongs to
  user_gyakorlat  User_Gyakorlat @relation(fields: [user_id, gyakorlat_id], references: [user_id, gyakorlat_id])
  edzes           Edzes         @relation(fields: [edzes_id], references: [edzes_id])

  @@index([user_id, gyakorlat_id])
  @@index([edzes_id])
  @@map("user_gyakorlat_history")
}

// EDZÉS TABLE
model Edzes {
  edzes_id       Int                 @id @default(autoincrement())
  edzes_neve     String
  datum          DateTime            @default(now())
  isTemplate     Boolean?            @default(false)
  user_id        Int
  ido            Int                  @default(0)
  isFinalized    Boolean?             @default(false)
  isFavorite     Boolean?             @default(false)
  user           User?               @relation(fields: [user_id], references: [user_id])   
  gyakorlatok    Edzes_Gyakorlat[]   // Many-to-many relationship to Gyakorlat   
  history        User_Gyakorlat_History[] // Relation to history entries

  @@map("edzes")
}



// EDZÉS-GYAKORLAT JUNCTION TABLE
model Edzes_Gyakorlat {
  edzes_id      Int
  gyakorlat_id  Int
  createdAt     DateTime   @default(now())
  edzes         Edzes     @relation(fields: [edzes_id], references: [edzes_id])
  gyakorlat     Gyakorlat @relation(fields: [gyakorlat_id], references: [gyakorlat_id])
  szettek       Edzes_Gyakorlat_Set[]

  @@id([edzes_id, gyakorlat_id])
}

// EDZÉS-GYAKORLAT-SET TABLE (Track each set of an exercise in a workout)
model Edzes_Gyakorlat_Set {
  id              Int           @id @default(autoincrement())
  edzes_id        Int
  gyakorlat_id    Int
  set_szam        Int          // Which set number is this (1, 2, 3, etc.)
  weight          Float        // Weight used in this specific set
  reps            Float        // Reps done in this specific set
  edzes_gyakorlat Edzes_Gyakorlat @relation(fields: [edzes_id, gyakorlat_id], references: [edzes_id, gyakorlat_id])

  @@unique([edzes_id, gyakorlat_id, set_szam])
  @@map("edzes_gyakorlat_set")
}

// IZOMCSOPORT TABLE
model Izomcsoport {
  izomcsoport_id Int                      @id @default(autoincrement())
  nev            String
  gyakorlatok    Gyakorlat_Izomcsoport[]
  @@map("izomcsoport")
}

// GYAKORLAT-IZOMCSOPORT JUNCTION TABLE
model Gyakorlat_Izomcsoport {
  gyakorlat_id    Int
  izomcsoport_id  Int
  gyakorlat       Gyakorlat    @relation(fields: [gyakorlat_id], references: [gyakorlat_id])
  izomcsoport     Izomcsoport @relation(fields: [izomcsoport_id], references: [izomcsoport_id])

  @@id([gyakorlat_id, izomcsoport_id])
}

